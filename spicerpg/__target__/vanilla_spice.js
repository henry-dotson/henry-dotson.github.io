'use strict';var random={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,
__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,
getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_random__ from"./random.js";__nest__(random,"",__module_random__);var __name__="__main__";export var classic=dict({"i-room":dict({"intro":"You are on a quest to rid the land of the evil scourge.","desc":"Your band of adventures finds themselves in a dark cave."}),
"e-room":dict({"intro":"You enter into the room...","desc":[dict({"earth":"a massive mound of dirt is in the middle of the room."}),dict({"wind":"a constant rushing wind blows through the room."}),dict({"fire":"torches line the walls."}),dict({"water":"a river runs through the room."}),dict({"light":"a soft glow comes from the next door."}),dict({"dark":"the room is pitch black."})],"choice":"Do you walk along the right wall, the left wall, or down the middle?"}),"s-room":dict({"intro":"You enter into the room, and a character stands in the middle of it.",
"desc":"They ask you a riddle: 'Are you friend or foe? If a friend then hold thy tongue; if a foe your silence will be proof enough!'","choice":"Do you say friend, foe, nothing, or something else?"}),"t-room":dict({"intro":"You enter into the room and see an altar.","desc":"The inscription says 'Beware what lies beyond these walls. Pay your respects to your source strength.'","choice":"Do you pray at the altar, or continue on your way?"}),"c-room":dict({"intro":"A group of wild beasts appear.","desc":"Go to the combat board."}),
"b-room":dict({"intro":"You enter into the room, and see a character standing on a platform surrounded by their followers.","desc":"It doesn't appear that they have noticed you, yet.","choice":"Do you ready yourself, or charge in?"}),"f-room":dict({"desc":"You rid the land of the scourge, and the townspeople rejoice and sing your praises!"})});export var Campaign=__class__("Campaign",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,json){self.json=json;self.desc=document.getElementById("desc")})},
get intro_room(){return __get__(this,function(self){self.desc.innerHTML="{} {}".format(self.json["i-room"]["intro"],self.json["i-room"]["desc"])})},get combat_room(){return __get__(this,function(self){self.desc.innerHTML="{} {}".format(self.json["c-room"]["intro"],self.json["c-room"]["desc"])})},get explore_room(){return __get__(this,function(self){var elements=self.json["e-room"]["desc"];var roll=random.choice([1,2,3,4,5,6]);self.desc.innerHTML="{} {} {}".format(self.json["e-room"]["intro"],"".join(elements[roll].py_values()),
self.json["e-room"]["choice"])})},get social_room(){return __get__(this,function(self){self.desc.innerHTML="{} {} {}".format(self.json["s-room"]["intro"],self.json["s-room"]["desc"],self.json["s-room"]["choice"])})},get treasure_room(){return __get__(this,function(self){self.desc.innerHTML="{} {} {}".format(self.json["t-room"]["intro"],self.json["t-room"]["desc"],self.json["t-room"]["choice"])})},get boss_room(){return __get__(this,function(self){self.desc.innerHTML="{} {} {}".format(self.json["b-room"]["intro"],
self.json["b-room"]["desc"],self.json["b-room"]["choice"])})},get finale(){return __get__(this,function(self){self.desc.innerHTML="{}".format(self.json["f-room"]["desc"])})}});export var play=Campaign(classic);

//# sourceMappingURL=vanilla_spice.map
